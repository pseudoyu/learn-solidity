{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotEnoughFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdralFailed",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x436d7b0004c78f65b51a92f24f1eedcb3a0a660d0bf2918e7a7f0c4c0e428b66",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "839715",
    "logsBloom": "0x
    "blockHash": "0xe8eb7647f110f6728ed9fbaf83668dae349fa10a2e92b9b0829b083d8e9fc8f9",
    "transactionHash": "0x436d7b0004c78f65b51a92f24f1eedcb3a0a660d0bf2918e7a7f0c4c0e428b66",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "839715",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "10ef1ed82f278f43bb9925f36138729f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotEnoughFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdralFailed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\nerror NotEnoughFunds();\\nerror WithdralFailed();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address public immutable owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner, \\\"Not owner\\\");\\n        if (msg.sender != owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    function fund() public payable {\\n        // require(\\n        //     msg.value.getConversionRate() > MINIMUM_USD,\\n        //     \\\"Not Enough Money\\\"\\n        // );\\n\\n        if (msg.value.getConversionRate(priceFeed) < MINIMUM_USD) {\\n            revert NotEnoughFunds();\\n        }\\n\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            addressToAmountFunded[funders[funderIndex]] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        // transfer\\n        payable(msg.sender).transfer(address(this).balance);\\n\\n        // send\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Withdraw Failed\\\");\\n        if (!sendSuccess) {\\n            revert WithdralFailed();\\n        }\\n\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        // require(callSuccess, \\\"Withdraw Failed\\\");\\n        if (!callSuccess) {\\n            revert WithdralFailed();\\n        }\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x104c37be091df8adc9f03afb65820870a809ea725a0627b12d7822402641cc9b\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x615757cf0d4b852f742df26569d9d1fc00dd50d7fec1336bd8e0c061cd7d6cbd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f34380380610f3483398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610dcf610165600039600081816102cb01526105ff0152610dcf6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102c9565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610846565b6105b2565b6040516100d8919061088c565b60405180910390f35b3480156100ed57600080fd5b506100f66105ca565b604051610103919061088c565b60405180910390f35b34801561011857600080fd5b506101216105d7565b60405161012e9190610906565b60405180910390f35b34801561014357600080fd5b5061014c6105fd565b6040516101599190610930565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e9190610977565b610621565b6040516101a09190610930565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066090919063ffffffff16565b1015610220576040517f81b5ad6800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103f357600060016000808481548110610377576103766109a4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103eb90610a02565b915050610351565b50600067ffffffffffffffff81111561040f5761040e610a4b565b5b60405190808252806020026020018201604052801561043d5781602001602082028036833780820191505090505b506000908051906020019061045392919061073c565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561049a573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505090508061050b576040517f3f24d0f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161053190610aab565b60006040518083038185875af1925050503d806000811461056e576040519150601f19603f3d011682016040523d82523d6000602084013e610573565b606091505b50509050806105ae576040517f3f24d0f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061063157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061066c8361069c565b90506000670de0b6b3a764000085836106859190610ac0565b61068f9190610b49565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106e557600080fd5b505afa1580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d9190610c07565b5050509150506402540be400816107349190610c82565b915050919050565b8280548282559060005260206000209081019282156107b5579160200282015b828111156107b45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061075c565b5b5090506107c291906107c6565b5090565b5b808211156107df5760008160009055506001016107c7565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610813826107e8565b9050919050565b61082381610808565b811461082e57600080fd5b50565b6000813590506108408161081a565b92915050565b60006020828403121561085c5761085b6107e3565b5b600061086a84828501610831565b91505092915050565b6000819050919050565b61088681610873565b82525050565b60006020820190506108a1600083018461087d565b92915050565b6000819050919050565b60006108cc6108c76108c2846107e8565b6108a7565b6107e8565b9050919050565b60006108de826108b1565b9050919050565b60006108f0826108d3565b9050919050565b610900816108e5565b82525050565b600060208201905061091b60008301846108f7565b92915050565b61092a81610808565b82525050565b60006020820190506109456000830184610921565b92915050565b61095481610873565b811461095f57600080fd5b50565b6000813590506109718161094b565b92915050565b60006020828403121561098d5761098c6107e3565b5b600061099b84828501610962565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a0d82610873565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a4057610a3f6109d3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a95600083610a7a565b9150610aa082610a85565b600082019050919050565b6000610ab682610a88565b9150819050919050565b6000610acb82610873565b9150610ad683610873565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b0f57610b0e6109d3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b5482610873565b9150610b5f83610873565b925082610b6f57610b6e610b1a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b9981610b7a565b8114610ba457600080fd5b50565b600081519050610bb681610b90565b92915050565b6000819050919050565b610bcf81610bbc565b8114610bda57600080fd5b50565b600081519050610bec81610bc6565b92915050565b600081519050610c018161094b565b92915050565b600080600080600060a08688031215610c2357610c226107e3565b5b6000610c3188828901610ba7565b9550506020610c4288828901610bdd565b9450506040610c5388828901610bf2565b9350506060610c6488828901610bf2565b9250506080610c7588828901610ba7565b9150509295509295909350565b6000610c8d82610bbc565b9150610c9883610bbc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cd757610cd66109d3565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d1457610d136109d3565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d5157610d506109d3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d8e57610d8d6109d3565b5b82820290509291505056fea2646970667358221220bbf08b62f3333001cc52cd1e6bc996993b1373ce1661b7dc53f4bbf434f6c1d564736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102c9565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610846565b6105b2565b6040516100d8919061088c565b60405180910390f35b3480156100ed57600080fd5b506100f66105ca565b604051610103919061088c565b60405180910390f35b34801561011857600080fd5b506101216105d7565b60405161012e9190610906565b60405180910390f35b34801561014357600080fd5b5061014c6105fd565b6040516101599190610930565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e9190610977565b610621565b6040516101a09190610930565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461066090919063ffffffff16565b1015610220576040517f81b5ad6800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461034e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103f357600060016000808481548110610377576103766109a4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103eb90610a02565b915050610351565b50600067ffffffffffffffff81111561040f5761040e610a4b565b5b60405190808252806020026020018201604052801561043d5781602001602082028036833780820191505090505b506000908051906020019061045392919061073c565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561049a573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505090508061050b576040517f3f24d0f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161053190610aab565b60006040518083038185875af1925050503d806000811461056e576040519150601f19603f3d011682016040523d82523d6000602084013e610573565b606091505b50509050806105ae576040517f3f24d0f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061063157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061066c8361069c565b90506000670de0b6b3a764000085836106859190610ac0565b61068f9190610b49565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106e557600080fd5b505afa1580156106f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071d9190610c07565b5050509150506402540be400816107349190610c82565b915050919050565b8280548282559060005260206000209081019282156107b5579160200282015b828111156107b45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061075c565b5b5090506107c291906107c6565b5090565b5b808211156107df5760008160009055506001016107c7565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610813826107e8565b9050919050565b61082381610808565b811461082e57600080fd5b50565b6000813590506108408161081a565b92915050565b60006020828403121561085c5761085b6107e3565b5b600061086a84828501610831565b91505092915050565b6000819050919050565b61088681610873565b82525050565b60006020820190506108a1600083018461087d565b92915050565b6000819050919050565b60006108cc6108c76108c2846107e8565b6108a7565b6107e8565b9050919050565b60006108de826108b1565b9050919050565b60006108f0826108d3565b9050919050565b610900816108e5565b82525050565b600060208201905061091b60008301846108f7565b92915050565b61092a81610808565b82525050565b60006020820190506109456000830184610921565b92915050565b61095481610873565b811461095f57600080fd5b50565b6000813590506109718161094b565b92915050565b60006020828403121561098d5761098c6107e3565b5b600061099b84828501610962565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a0d82610873565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a4057610a3f6109d3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a95600083610a7a565b9150610aa082610a85565b600082019050919050565b6000610ab682610a88565b9150819050919050565b6000610acb82610873565b9150610ad683610873565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b0f57610b0e6109d3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b5482610873565b9150610b5f83610873565b925082610b6f57610b6e610b1a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b9981610b7a565b8114610ba457600080fd5b50565b600081519050610bb681610b90565b92915050565b6000819050919050565b610bcf81610bbc565b8114610bda57600080fd5b50565b600081519050610bec81610bc6565b92915050565b600081519050610c018161094b565b92915050565b600080600080600060a08688031215610c2357610c226107e3565b5b6000610c3188828901610ba7565b9550506020610c4288828901610bdd565b9450506040610c5388828901610bf2565b9350506060610c6488828901610bf2565b9250506080610c7588828901610ba7565b9150509295509295909350565b6000610c8d82610bbc565b9150610c9883610bbc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610cd757610cd66109d3565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d1457610d136109d3565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d5157610d506109d3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d8e57610d8d6109d3565b5b82820290509291505056fea2646970667358221220bbf08b62f3333001cc52cd1e6bc996993b1373ce1661b7dc53f4bbf434f6c1d564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}